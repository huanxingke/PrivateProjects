{"version":3,"sources":["CookieManager.jsx","index.jsx"],"names":["last_output","cookies","Cookies","withStreamlitConnection","props","args","method","param","value","expires_at","output","set","path","samesite","expires","Date","setCookie","get","getCookie","remove","deleteCookie","getAll","JSON","stringify","Streamlit","setComponentValue","setComponentReady","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAUIA,EAAc,KACZC,EAAU,IAAIC,IAyDLC,eAvDO,SAACC,GAEnB,IA2BQC,EAASD,EAATC,KACFC,EAASD,EAAa,OACtBE,EAAQF,EAAY,MACpBG,EAAQH,EAAY,MACpBI,EAAaJ,EAAiB,WAEhCK,EAAS,KAiBb,OAfIA,EADU,OAAVJ,EAlCc,SAACC,EAAOC,EAAOC,GAM7B,OALAR,EAAQU,IAAIJ,EAAOC,EAAO,CACtBI,KAAM,IACNC,SAAU,SACVC,QAAS,IAAIC,KAAKN,KAEf,CAAC,KAAQ,IAAK,IAAO,cAAgBF,EAAQ,IAAMC,EAAQ,IACtE,CA4BaQ,CAAUT,EAAOC,EAAOC,GAChB,OAAVH,EA3BO,SAACC,GACf,IAAMC,EAAQP,EAAQgB,IAAIV,IAAU,KACpC,OAAa,MAATC,EACO,CAAC,KAAQ,IAAK,IAAO,kBAErB,CAAC,KAAQ,IAAK,IAAO,WAAY,MAASA,EAEzD,CAqBaU,CAAUX,GACF,OAAVD,EApBU,SAACC,GAElB,OADAN,EAAQkB,OAAOZ,EAAO,CAAEK,KAAM,IAAKC,SAAU,WACtC,CAAC,KAAQ,IAAK,IAAO,6BAA+BN,EAAQ,IACvE,CAkBaa,CAAab,GAff,CAAC,KAAQ,IAAK,IAAO,WAAY,QAAWN,EAAQoB,UAoB3DX,GAAUY,KAAKC,UAAUvB,IAAgBsB,KAAKC,UAAUb,KACxDV,EAAcU,EACdc,IAAUC,kBAAkBf,GAC5Bc,IAAUE,qBAGP,uBACX,IC9DAC,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAa,MAEhBC,SAASC,eAAe,Q","file":"static/js/main.3d7cc352.chunk.js","sourcesContent":["import {\n  Streamlit,\n  ComponentProps,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { useEffect, useState } from \"react\"\n\nimport Cookies from \"universal-cookie\"\n\n\nlet last_output = null\nconst cookies = new Cookies()\n\nconst CookieManager = (props: ComponentProps) => {\n    //method = \"set\"\n    const setCookie = (param, value, expires_at) => {\n        cookies.set(param, value, {\n            path: \"/\",\n            samesite: \"strict\",\n            expires: new Date(expires_at)\n        })\n        return {\"code\": 200, \"msg\": \"Set cookie \" + param + \"=\" + value + \".\"}\n    }\n    //method = \"get\"\n    const getCookie = (param) => {\n        const value = cookies.get(param) || null;\n        if (value == null) {\n            return {\"code\": 404, \"msg\": \"Key Not Exist!\"}\n        } else {\n            return {\"code\": 200, \"msg\": \"Success.\", \"value\": value}\n        }\n    }\n    //method = \"del\"\n    const deleteCookie = (param) => {\n        cookies.remove(param, { path: \"/\", samesite: \"strict\" })\n        return {\"code\": 200, \"msg\": \"Delete cookie where param=\" + param + \".\"}\n    }\n    //other methods\n    const getAllCookies = () => {\n        return {\"code\": 200, \"msg\": \"Success.\", \"cookies\": cookies.getAll()}\n    }\n    //Get params.\n    const { args } = props\n    const method = args[\"method\"]\n    const param = args[\"param\"]\n    const value = args[\"value\"]\n    const expires_at = args[\"expires_at\"]\n    //Make output.\n    let output = null;\n    if (method == \"set\") {\n        output = setCookie(param, value, expires_at)\n    } else if (method == \"get\") {\n        output = getCookie(param)\n    } else if (method == \"del\") {\n        output = deleteCookie(param)\n    } else {\n        output = getAllCookies()\n    }\n    //Avoid refreshing frequently.\n    if (output && JSON.stringify(last_output) != JSON.stringify(output)) {\n        last_output = output\n        Streamlit.setComponentValue(output)\n        Streamlit.setComponentReady()\n    }\n    //Return template.\n    return <div></div>\n}\n\nexport default withStreamlitConnection(CookieManager)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport CookieManager from \"./CookieManager\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookieManager />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}